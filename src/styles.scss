// Custom Theming for Angular Material
// For more information: https://material.angular.io/guide/theming

@use "@angular/material" as mat;
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat.core();

// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$chatbot_ng-primary: mat.define-palette(mat.$teal-palette, 600);
$chatbot_ng-accent: mat.define-palette(mat.$gray-palette, 50);

// The warn palette is optional (defaults to red).
$chatbot_ng-warn: mat.define-palette(mat.$red-palette);

// Create the theme object. A theme consists of configurations for individual
// theming systems such as "color" or "typography".
$chatbot_ng-theme: mat.define-light-theme(
  (
    color: (
      primary: $chatbot_ng-primary,
      accent: $chatbot_ng-accent,
      warn: $chatbot_ng-warn,
    ),
  )
);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include mat.all-component-themes($chatbot_ng-theme);

/* You can add global styles to this file, and also import other style files */

@tailwind base;
@tailwind components;
@tailwind utilities;
// @import "ngx-spinner/animations/ball-pulse-sync.css";

html,
body {
  height: 100%;
}
body {
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif;
}

// input:-webkit-autofill,
// input:-webkit-autofill:hover,
// input:-webkit-autofill:focus,
// input:-webkit-autofill:active {
//   transition: background-color 5000s ease-in-out 0s;
// }
input:-webkit-autofill {
  -webkit-background-clip: text;
}
